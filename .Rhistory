gmm_model <- Mclust(ss_gmm_df, G=8)
print(gmm_model)
```{r}
summary(gmm_model)
gmm_model$BIC
gmm_model$modelName
gmm_model$uncertainty
gmm_model$classification
gmm_model$call
length(gmm_model$uncertainty)
length(gmm_model$classification)
strat_samp$cluster <- gmm_model$classification
strat_samp$uncertainty <- gmm_model$uncertainty
strat_samp %>%
group_by(cluster) %>%
summarise_all("mean")
strat_samp %>%
group_by(cluster) %>%
select(sum_click) %>%
summarise_all("mean")
strat_samp %>%
group_by(cluster) %>%
select(sum_click) %>%
summarise("count")
strat_samp %>%
group_by(cluster) %>%
select(sum_click) %>%
summarise("mean")
strat_samp %>%
group_by(cluster) %>%
select(sum_click) %>%
summarise_all("mean")
strat_samp %>%
group_by(cluster) %>%
select(sum_click) %>%
summarise_all("mean") %>%
ungroup() %>%
summarise(n = n())
strat_samp %>%
group_by(cluster) %>%
select(sum_click) %>%
summarise_all("mean") %>%
summarise(n = n())
strat_samp %>%
group_by(cluster) %>%
summarise(sum_clicks = mean(sum_click),
Number_of_students = n())
view(strat_samp)
View(strat_samp)
view(format(strat_samp, scientific = FALSE))
# Plot our results.
plot(gmm_model, what = "classification", main = "Mclust Classification")
gmm_model$z
gmm_model$df
gmm_model$parameters$mean
view(gmm_model$z)
gmm_model$parameters$mean
gmm_model$parameters$pro
length(gmm_model$z)
gmm_model$z
format(gmm_model$z, scientific = FALSE)
round(format(gmm_model$z, scientific = FALSE), 5)
format(round(gmm_model$z, 5), scientific = FALSE))
format(round(gmm_model$z, 5), scientific = FALSE)
View(svle_df)
svle_df %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click),
avg_sum_click = mean(sum_click))
favstats(svle_df$date)
student_clicks <- svle_df %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
favstats(student_clicks$sum_clicks)
view(student_clicks$sum_clicks)
view(student_clicks)
View(student_clicks)
student_clicks_gmm <- select(student_clicks, sum_clicks)
student_clicks_gmm
gmm_model2 <- Mclust(student_clicks_gmm, G=8)
gmm_model2 <- Mclust(student_clicks_gmm, G=8)
summary(gmm_model2)
svle_df %>%
group_by(id_site) %>%
summarise(n = n())
gmm_model2$parameters$mean
hist(student_clicks$sum_clicks)
hist(student_clicks$sum_clicks, breaks = 10)
hist(student_clicks$sum_clicks, breaks = 20)
hist(student_clicks$sum_clicks, breaks = 30)
hist(student_clicks$sum_clicks, breaks = 40)
hist(student_clicks$sum_clicks, breaks = 50)
favstats(svle_df$date)
svle_df %>%
filter(date >=86 & date <= 156)
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=86 & date <= 156) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=1 & date <= 10) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= 269) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= -10) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= -10) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= -24) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= -25) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= -1) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= 0) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= -18) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
student_clicks
student_clicks$cluster <- gmm_model2$classification
student_clicks$uncertainty <- gmm_model2$uncertainty
# Exclude scientific outputs
view(format(strat_samp, scientific = FALSE))
# Exclude scientific outputs
view(format(student_clicks, scientific = FALSE))
student_clicks
options(scipen=999)
View(student_clicks)
gmm_model2$parameters$mean
# Obtain used cluster averages and number of observations in each cluster.
student_clicks %>%
group_by(cluster) %>%
summarise(sum_clicks = mean(sum_click),
Number_of_students = n())
# Obtain used cluster averages and number of observations in each cluster.
student_clicks %>%
group_by(cluster) %>%
summarise(sum_clicks = mean(sum_clicks),
Number_of_students = n())
summary(gmm_model2)
as.dataframe(gmm_model2$parameters$mean)
as.data.frame(gmm_model2$parameters$mean)
as.data.frame() %>%
mutate(cluster_mean = gmm_model2$parameters$mean)
```{r}
as.data.frame(gmm_model2$parameters$mean)
cluster_mean_df <- as.data.frame(gmm_model2$parameters$mean)
colnames(cluster_mean_df)
cluster_mean_df <- as.data.frame(gmm_model2$parameters$mean)
colnames(cluster_mean_df) <- "cluster_mean"
cluster_mean_df
# Rename rownames to date in R
cluster_mean_df <- cbind(cluster = rownames(cluster_mean_df), cluster_mean_df)
# Remove rownames
rownames(cluster_mean_df) <- NULL
cluster_mean_df
gmm_model2$d
# Obtain used cluster averages and number of observations in each cluster.
student_clicks %>%
group_by(cluster) %>%
summarise(Number_of_students = n())
knitr::opts_chunk$set(echo = TRUE)
svle_df %>%
filter(date >=-25 & date <= 269) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
# Open University Learning Analytics Dataset
library(oulad)
# Data Analyis and Visualisation
library(tidyverse)
# Clustering Algorithms
library(cluster)
# Clustering Algorithms and Data Visualization
library(factoextra)
# Gaussian mixture model (GMM)
library(mclust)
library(tigerstats)
svle_df %>%
filter(date >=-25 & date <= 269) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
knitr::opts_chunk$set(echo = TRUE)
# Open University Learning Analytics Dataset
library(oulad)
# Data Analyis and Visualisation
library(tidyverse)
# Load student VLE data
svle_df <- student_vle
svle_df
svle_df %>% head()
# Percentage of missing values
sum(is.na(svle_df$sum_click))/length(svle_df$sum_click) * 100
# Statistical Summary
library(tigerstats)
svle_df %>%
# filter(date >=-25 & date <= 269) %>%  Filter for the dashboard
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
clicks_df <- svle_df %>%
# filter(date >=-25 & date <= 269) %>%  Filter for the dashboard
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
clicks_df %>% head()
favstats(svle_df$date)
favstats(svle_df$sum_click)
clicks_df <- svle_df %>%
# filter(date >=-25 & date <= 269 &
# code_presentation %in% 2013J) %>%  Filter for the dashboard (days) and semester
group_by(id_student) %>%
summarise(sum_click = sum(sum_click))
clicks_df %>% head()
favstats(clicks_df$sum_click)
gmm_df <- select(clicks_df, sum_click)
gmm_df %>% head()
# Fit a GMM model
start_time <- Sys.time()
gmm_model <- Mclust(ss_gmm_df, G=25)
# Fit a GMM model
start_time <- Sys.time()
gmm_model <- Mclust(gmm_df, G=25)
end_time <- Sys.time()
# Execution Time
end_time - start_time
print(gmm_model)
# Summary table
summary(gmm_fit)
# Summary table
summary(gmm_model)
# Cluster Means
gmm_model$parameters$mean
# Add clusters and uncertainty values to original dataset
clicks_df$cluster <- gmm_model$classification
clicks_df$uncertainty <- gmm_model$uncertainty
# View dataset
options(scipen=999)
View(clicks_df)
clicks_df %>% head()
gmm_model$G
# Probability of a student belonging to a cluster
cluster_probabilitics <- gmm_model$z
colnames(probabilities) <- paste0('cluster', 1:gmm_model$G)
colnames(cluster_probabilitics) <- paste0('cluster', 1:gmm_model$G)
# Probability of a student belonging to a cluster
cluster_probabilitics <- gmm_model$z
colnames(cluster_probabilitics) <- paste0('cluster', 1:gmm_model$G)
cluster %>% head()
# Probability of a student belonging to a cluster
cluster_probabilitics <- gmm_model$z
colnames(cluster_probabilitics) <- paste0('cluster', 1:gmm_model$G)
cluster_probabilitics %>% head()
# Probability of a student belonging to a cluster
cluster_probabilitics <- gmm_model$z
colnames(cluster_probabilitics) <- paste0('cluster', 1:gmm_model$G)
options(scipen=999)
cluster_probabilitics %>% head()
# Probability of a student belonging to a cluster
cluster_probabilitics <- gmm_model$z
colnames(cluster_probabilitics) <- paste0('cluster', 1:gmm_model$G)
options(scipen=999)
cluster_probabilitics %>% head(1)
cluster_probabilitics %>% head(1) %>% as.data.frame()
cluster_probabilitics %>%
round(2)
# Probability of a student belonging to a cluster
cluster_probabilitics <- gmm_model$z
colnames(cluster_probabilitics) <- paste0('cluster', 1:gmm_model$G)
options(scipen=999)
cluster_probabilitics %>%
round(2)
head(1) %>%
as.data.frame()
# Probability of a student belonging to a cluster
cluster_probabilitics <- gmm_model$z
colnames(cluster_probabilitics) <- paste0('cluster', 1:gmm_model$G)
options(scipen=999)
cluster_probabilitics %>%
round(2) %>%
as.data.frame()
# Probability of a student belonging to a cluster
cluster_probabilitics <- gmm_model$z
colnames(cluster_probabilitics) <- paste0('cluster', 1:gmm_model$G)
options(scipen=999)
cluster_probabilitics %>%
round(2) %>%
as.data.frame() %>%
head()
# Probability of a student belonging to a cluster
cluster_probabilitics <- gmm_model$z
colnames(cluster_probabilitics) <- paste0('cluster', 1:gmm_model$G)
options(scipen=999)
cluster_probabilitics <- cluster_probabilitics %>%
round(2) %>%
as.data.frame()
cluster_probabilitics %>% head()
# Add cluster belonging of student
cluster_probabilitics$cluster <- clicks_df$cluster
cluster_probabilitics$id_student <- clicks_df$id_student
cluster_probabilitics %>% head()
# Probability of a student belonging to a cluster
cluster_probabilitics <- gmm_model$z
colnames(cluster_probabilitics) <- paste0('cluster', 1:gmm_model$G)
options(scipen=999)
# Create probabilities data frame
cluster_probabilitics <- cluster_probabilitics %>%
round(2) %>%
as.data.frame()
cluster_probabilitics %>% head()
# Add cluster belonging of student
cluster_probabilitics$cluster <- gmm_model$uncertainty
cluster_probabilitics$cluster <- clicks_df$cluster
cluster_probabilitics$id_student <- clicks_df$id_student
cluster_probabilitics %>% head()
# Add cluster belonging of student
cluster_probabilitics$cluster <- gmm_model$uncertainty
cluster_probabilitics$cluster <- clicks_df$cluster
cluster_probabilitics$id_student <- clicks_df$id_student
cluster_probabilitics %>% head()
# Add cluster belonging of student
cluster_probabilitics$cluster <- gmm_model$uncertainty
cluster_probabilitics$cluster <- clicks_df$cluster
cluster_probabilitics$id_student <- clicks_df$id_student
cluster_probabilitics %>% head()
# Probability of a student belonging to a cluster
cluster_probabilitics <- gmm_model$z
colnames(cluster_probabilitics) <- paste0('cluster', 1:gmm_model$G)
options(scipen=999)
# Create probabilities data frame
cluster_probabilitics <- cluster_probabilitics %>%
round(2) %>%
as.data.frame()
cluster_probabilitics %>% head()
# Add cluster belonging of student
cluster_probabilitics$cluster <- clicks_df$cluster
cluster_probabilitics$uncertainty <- gmm_model$uncertainty
cluster_probabilitics$id_student <- clicks_df$id_student
cluster_probabilitics %>% head()
cluster_mean_df <- as.data.frame(gmm_model$parameters$mean)
colnames(cluster_mean_df) <- "cluster_mean"
cluster_mean_df
# Rename rownames to date in R
cluster_mean_df <- cbind(cluster = rownames(cluster_mean_df), cluster_mean_df)
# Remove rownames
rownames(cluster_mean_df) <- NULL
cluster_mean_df
# Obtain number of observations in each cluster.
clicks_df %>%
group_by(cluster) %>%
summarise(Number_of_students = n())
# Obtain number of observations in each cluster.
clicks_df %>%
group_by(cluster) %>%
summarise(Number_of_students = n()) %>%
arrange()
# Obtain number of observations in each cluster.
clicks_df %>%
group_by(cluster) %>%
summarise(Number_of_students = n()) %>%
arrange(Number_of_students)
# Obtain number of observations in each cluster.
clicks_df %>%
group_by(cluster) %>%
summarise(Number_of_students = n()) #%>%
# arrange(Number_of_students)
# Obtain number of observations in each cluster.
cluster_count_df <- clicks_df %>%
group_by(cluster) %>%
summarise(Number_of_students = n()) #%>%
# arrange(Number_of_students)
cluster_count_df
merge(cluster_mean_df, cluster_count_df)
merge(cluster_mean_df, cluster_count_df) %>%
arrange(cluster)
cluster_stats <- merge(cluster_mean_df, cluster_count_df)
cluster_stats %>% arrange(cluster)
cluster_stats %>% arrange(desc(cluster))
cluster_stats %>% arrange(desc(cluster_mean))
cluster_stats %>% arrange(cluster_mean)
cluster_stats <- merge(cluster_mean_df, cluster_count_df) %>% arrange(cluster_mean)
cluster_stats
select(cluster_probabilitics, -cluster, -uncertainty, -id_student)
probabilities <- select(cluster_probabilitics, -cluster, -uncertainty, -id_student) %>%
as.data.frame() %>%
mutate(id = row_number()) %>%
tidyr::gather(cluster, probability, -id)
ggplot(probabilities, aes(probability)) +
geom_histogram() +
facet_wrap(~ cluster, nrow = 2)
probabilities <- select(cluster_probabilitics, -cluster, -uncertainty, -id_student) %>%
as.data.frame() %>%
mutate(id = row_number()) %>%
tidyr::gather(cluster, probability, -id)
ggplot(probabilities, aes(probability)) +
geom_histogram() +
facet_wrap(~ cluster, ncol = 4)
probabilities <- select(cluster_probabilitics, -cluster, -uncertainty, -id_student) %>%
as.data.frame() %>%
mutate(id = row_number()) %>%
tidyr::gather(cluster, probability, -id)
ggplot(probabilities, aes(probability)) +
geom_histogram() +
facet_wrap(~ cluster, ncol = 2)
# Interactive ggplots
library(plotly)
ggplot(probabilities, aes(probability)) +
geom_histogram() +
facet_wrap(~ cluster, ncol = 2) %>%
ggplotly()
probabilities <- select(cluster_probabilitics, -cluster, -uncertainty, -id_student) %>%
as.data.frame() %>%
mutate(id = row_number()) %>%
tidyr::gather(cluster, probability, -id)
ggplot(probabilities, aes(probability)) +
geom_histogram() +
facet_wrap(~ cluster, ncol = 2) %>%
ggplotly()
probabilities <- select(cluster_probabilitics, -cluster, -uncertainty, -id_student) %>%
as.data.frame() %>%
mutate(id = row_number()) %>%
tidyr::gather(cluster, probability, -id)
ggplot(ggplot(probabilities, aes(probability)) +
geom_histogram() +
facet_wrap(~ cluster, ncol = 2))
probabilities <- select(cluster_probabilitics, -cluster, -uncertainty, -id_student) %>%
as.data.frame() %>%
mutate(id = row_number()) %>%
tidyr::gather(cluster, probability, -id)
ggplot(probabilities, aes(probability)) +
geom_histogram() +
facet_wrap(~ cluster, ncol = 2)
probabilities <- select(cluster_probabilitics, -cluster, -uncertainty, -id_student) %>%
as.data.frame() %>%
mutate(id = row_number()) %>%
tidyr::gather(cluster, probability, -id)
ggplot(probabilities, aes(probability)) +
geom_histogram() +
facet_wrap(~ cluster, nrow = 6)
# Fit a GMM model
set.seed(1837)
start_time <- Sys.time()
gmm_model <- Mclust(gmm_df, G=6)
end_time <- Sys.time()
# Execution Time
end_time - start_time
print(gmm_model)
# Summary table
summary(gmm_model)
# Cluster Means
gmm_model$parameters$mean
# Add clusters and uncertainty values to original dataset
clicks_df$cluster <- gmm_model$classification
clicks_df$uncertainty <- gmm_model$uncertainty
clicks_df %>% head()
# Exclude scientific outputs
options(scipen=999)
# View data set
# View(clicks_df)
# Probability of a student belonging to a cluster
cluster_probabilitics <- gmm_model$z
colnames(cluster_probabilitics) <- paste0('cluster', 1:gmm_model$G)
options(scipen=999)
# Create probabilities data frame
cluster_probabilitics <- cluster_probabilitics %>%
round(2) %>%
as.data.frame()
cluster_probabilitics %>% head()
# Add cluster belonging of student
cluster_probabilitics$cluster <- clicks_df$cluster
cluster_probabilitics$uncertainty <- gmm_model$uncertainty
cluster_probabilitics$id_student <- clicks_df$id_student
cluster_probabilitics %>% head()
cluster_mean_df <- as.data.frame(gmm_model$parameters$mean)
colnames(cluster_mean_df) <- "cluster_mean"
cluster_mean_df
# Rename rownames to cluster
cluster_mean_df <- cbind(cluster = rownames(cluster_mean_df), cluster_mean_df)
# Remove rownames
rownames(cluster_mean_df) <- NULL
cluster_mean_df
# Obtain number of observations in each cluster.
cluster_count_df <- clicks_df %>%
group_by(cluster) %>%
summarise(Number_of_students = n()) #%>%
# arrange(Number_of_students)
cluster_count_df
cluster_stats <- merge(cluster_mean_df, cluster_count_df) %>% arrange(cluster_mean)
cluster_stats
probabilities <- select(cluster_probabilitics, -cluster, -uncertainty, -id_student) %>%
as.data.frame() %>%
mutate(id = row_number()) %>%
tidyr::gather(cluster, probability, -id)
ggplot(probabilities, aes(probability)) +
geom_histogram() +
facet_wrap(~ cluster, nrow = 6)
