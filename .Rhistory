# Data Analyis and Visualisation
library(tidyverse)
svle_df <- student_vle
svle_df
# Percentage of missing values
sum(is.na(svle_df$sum_click))/length(svle_df$sum_click) * 100
# Sum of clicks statistical summary
svle_df$sum_click %>% summary()
# Sum of clicks Standard deviation
round(sd(svle_df$sum_click),3)
# Sum of clicks percentiles
quantile(svle_df$sum_click, c(.25, .50, .75, .90, 1))
# Clustering Algorithms
library(cluster)
# Clustering Algorithms and Data Visualization
library(factoextra)
# Creating a dataframe consisting of only the Sum of clicks column
sc_df <- select(svle_df, sum_click)
sc_df
sc_df <- scale(sc_df)
sc_df %>% head()
set.seed(123)
# Sys.setenv('R_MAX_VSIZE'=32000000000)
library(bigmemory)
sc_df <- as.big.matrix(sc_df)
#memory.limit(8000)
fviz_nbclust(sc_df[,], kmeans, method = "wss")
kmeans(sc_df, centers = 2, nstart = 25)
knitr::opts_chunk$set(echo = TRUE)
# Open University Learning Analytics Dataset
library(oulad)
# Data Analyis and Visualisation
library(tidyverse)
svle_df <- student_vle
svle_df
# Percentage of missing values
sum(is.na(svle_df$sum_click))/length(svle_df$sum_click) * 100
# Sum of clicks statistical summary
svle_df$sum_click %>% summary()
# Sum of clicks Standard deviation
round(sd(svle_df$sum_click),3)
# Sum of clicks percentiles
quantile(svle_df$sum_click, c(.25, .50, .75, .90, 1))
# Clustering Algorithms
library(cluster)
# Clustering Algorithms and Data Visualization
library(factoextra)
# Creating a dataframe consisting of only the Sum of clicks column
sc_df <- select(svle_df, sum_click)
sc_df
sc_df <- scale(sc_df)
sc_df %>% head()
kmeans(sc_df, centers = 2, nstart = 25)
fviz_nbclust(sc_df, kmeans, method = "silhouette")
avg_sil <- function(k) {
km.res <- kmeans(sc_df, centers = k, nstart = 25)
ss <- silhouette(km.res$cluster, dist(df))
mean(ss[, 3])
}
# Compute and plot wss for k = 2 to k = 15
k.values <- 2:15
# extract avg silhouette for 2-15 clusters
avg_sil_values <- map_dbl(k.values, avg_sil)
set.seed(123)
gap_stat <- clusGap(df, FUN = kmeans, nstart = 25,
K.max = 10, B = 50)
gap_stat <- clusGap(sc_df, FUN = kmeans, nstart = 25,
K.max = 10, B = 50)
set.seed(123)
gap_stat <- clusGap(sc_df, FUN = kmeans, nstart = 25,
K.max = 10, B = 50)
kmeans(sc_df, centers = 5, nstart = 25)
install.packages("mclust")
library(mclust) # Gaussian mixture model (GMM)
gmm_fit <- Mclust(sc_df) # Fit a GMM model
library(mclust) # Gaussian mixture model (GMM)
sc_t <- select(svle_df, sum_clicks)
svle_df
sc_t <- select(svle_df, sum_click)
gmm_fit <- Mclust(sc_t) # Fit a GMM model
summary(gmm_fit) # Summary table
plot(gmm_fit, 'BIC')
gmm_fit2 <- Mclust(head(sc_t, 1000))
gmm_fit2 <- Mclust(head(sc_t, 10000))
gmm_fit2 <- Mclust(head(sc_t, 10000), 5)
kmeans(head(sc_df, 10000), centers = 5, nstart = 25)
gmm_fit2 <- Mclust(head(sc_t, 10000), 9)
kmeans(head(sc_df, 10000), centers = 9, nstart = 25)
kc <- kmeans(head(sc_df, 10000), centers = 9, nstart = 25)
print(kc)
fviz_cluster(kc, data = head(sc_df, 10000))
# Open University Learning Analytics Dataset
library(oulad)
# Data Analyis and Visualisation
library(tidyverse)
svle_df <- student_vle
svle_df
# Percentage of missing values
sum(is.na(svle_df$sum_click))/length(svle_df$sum_click) * 100
# Sum of clicks statistical summary
svle_df$sum_click %>% summary()
# Sum of clicks Standard deviation
round(sd(svle_df$sum_click),3)
# Sum of clicks percentiles
quantile(svle_df$sum_click, c(.25, .50, .75, .90, 1))
# Clustering Algorithms
library(cluster)
# Clustering Algorithms and Data Visualization
library(factoextra)
# Creating a dataframe consisting of only the Sum of clicks column
sc_k_means_df <- select(svle_df, sum_click)
sc_gmm_df <- select(svle_df, sum_click)
sc_k_means_df <- scale(sc_k_means_df)
sc_k_means_df %>% head()
view(sc_gmm_df)
# Sum of clicks percentiles
quantile(svle_df$sum_click, c(.25, .50, .75, .90, .95, 1))
# Sum of clicks percentiles
quantile(svle_df$sum_click, c(.25, .50, .75, .90, .95, .97, 1))
# Sum of clicks percentiles
quantile(svle_df$sum_click, c(.25, .50, .75, .90, .95, .97, .99 1))
# Sum of clicks percentiles
quantile(svle_df$sum_click, c(.25, .50, .75, .90, .95, .97, .99, 1))
# Sum of clicks percentiles
quantile(svle_df$sum_click, c(.25, .50, .75, .90, .95, .97, .999, 1))
# Sum of clicks percentiles
quantile(svle_df$sum_click, c(.25, .50, .75, .90, .95, .97, .99, .999, .9999, 1))
hist(sc_gmm_df)
sc_gmm_df
hist(sc_gmm_df$sum_click)
hist(sc_gmm_df$sum_click,
xlim=c(1,100))
hist(sc_gmm_df$sum_click,
xlim=c(1,200))
hist(sc_gmm_df$sum_click,
xlim=c(1,1000))
hist(sc_gmm_df$sum_click,
xlim=c(1,1000, breaks=4))
hist(sc_gmm_df$sum_click,
xlim=c(1,1000, breaks=4))
hist(sc_gmm_df$sum_click,
xlim=c(1,1000), breaks=4)
hist(sc_gmm_df$sum_click,
xlim=c(1,1000), breaks=10)
hist(sc_gmm_df$sum_click,
xlim=c(1,1000), breaks=20)
fig <- sc_gmm_df %>%
plot_ly(
y = ~sum_click,
type = 'violin',
box = list(
visible = T
),
meanline = list(
visible = T
),
x0 = 'Total Bill'
)
library(plotly)
fig <- sc_gmm_df %>%
plot_ly(
y = ~sum_click,
type = 'violin',
box = list(
visible = T
),
meanline = list(
visible = T
),
x0 = 'Total Bill'
)
fig <- fig %>%
layout(
yaxis = list(
title = "",
zeroline = F
)
)
fig
library(plotly)
fig <- sc_gmm_df %>%
plot_ly(
y = ~sum_click,
type = 'violin',
box = list(
visible = T
),
meanline = list(
visible = T
),
x0 = 'Total Bill'
)
fig <- fig %>%
layout(
yaxis = list(
title = "",
zeroline = F
)
)
fig
fig
library(plotly)
fig <- sc_gmm_df %>%
plot_ly(
y = ~sum_click,
type = 'violin',
box = list(
visible = T
),
meanline = list(
visible = T
),
x0 = 'Total Bill'
)
# fig <- fig %>%
#   layout(
#     yaxis = list(
#       title = "",
#       zeroline = F
#     )
#   )
fig
sample(sc_gmm_df,1000)
sample(sc_gmm_df,1000)
fig <- sample(sc_gmm_df$sum_click,1000) %>%
plot_ly(
y = ~sum_click,
type = 'violin',
box = list(
visible = T
),
meanline = list(
visible = T
),
x0 = 'Total Bill'
)
sample(sc_gmm_df$sum_click,1000)
plot_ly(
y = ~sample(sc_gmm_df$sum_click,1000),
type = 'violin',
box = list(
visible = T
),
meanline = list(
visible = T
),
x0 = 'Total Bill'
)
fig <- sc_gmm_df %>%
plot_ly(
y = ~sum_click,
type = 'violin',
box = list(
visible = T
),
meanline = list(
visible = T
),
x0 = 'Total Bill'
)
fig <- fig %>%
layout(
yaxis = list(
title = "",
zeroline = F
)
)
fig
svle_df
svle_df %>%
filter(code_presentation %in% "2014J")
svle_df %>%
filter(code_presentation == "2014J")
db_df <- svle_df %>%
filter(code_presentation %in% "2014J")
db_df
install.packages("tigerstats")
library(tigerstats)
favstats(db_df$sum_click)
table(db_df$code_module)
set.seed(1837)
AAA=subset(db_df,code_module=="AAA")
favstats(AAA$sum_click)
set.seed(1937)
AAA=subset(db_df,code_module == "AAA")
AAA_samp=popsamp(2500,AAA)
AAA_samp
set.seed(1837)
BBB = subset(db_df,code_module == "BBB")
BBB_samp = popsamp(2500,BBB)
BBB_samp
set.seed(1737)
CCC = subset(db_df,code_module == "CCC")
CCC_samp = popsamp(2500,CCC)
CCC_samp
set.seed(1637)
DDD = subset(db_df,code_module == "DDD")
DDD_samp = popsamp(2500,DDD)
DDD_samp
set.seed(1537)
EEE = subset(db_df,code_module == "EEE")
EEE_samp = popsamp(2500,EEE)
EEE_samp
set.seed(1437)
FFF = subset(db_df,code_module == "FFF")
FFF_samp = popsamp(2500,FFF)
FFF_samp
set.seed(1337)
GGG = subset(db_df,code_module == "GGG")
GGG_samp = popsamp(2500,GGG)
GGG_samp
strat_samp = rbind(AAA_samp, BBB_samp, CCC_samp, DDD_samp, EEE_samp, FFF_samp, GGG_samp)
strat_samp
favstats(db_df$sum_click)
favstats(strat_samp$sum_click)
View(strat_samp)
object.size(strat_samp)
ss_gmm_df <- select(strat_samp, sum_click)
gmm_model <- Mclust(ss_gmm_df, G=8)
print(gmm_model)
summary(gmm_model)
gmm_model <- Mclust(ss_gmm_df, G=3)
print(gmm_model)
summary(gmm_model)
gmm_model <- Mclust(ss_gmm_df, G=4)
print(gmm_model)
summary(gmm_model)
gmm_model <- Mclust(ss_gmm_df, G=27)
gmm_model <- Mclust(ss_gmm_df, G=10)
print(gmm_model)
summary(gmm_model)
summary(gmm_model)
gmm_model <- Mclust(ss_gmm_df, G=8)
print(gmm_model)
```{r}
summary(gmm_model)
gmm_model$BIC
gmm_model$modelName
gmm_model$uncertainty
gmm_model$classification
gmm_model$call
length(gmm_model$uncertainty)
length(gmm_model$classification)
strat_samp$cluster <- gmm_model$classification
strat_samp$uncertainty <- gmm_model$uncertainty
strat_samp %>%
group_by(cluster) %>%
summarise_all("mean")
strat_samp %>%
group_by(cluster) %>%
select(sum_click) %>%
summarise_all("mean")
strat_samp %>%
group_by(cluster) %>%
select(sum_click) %>%
summarise("count")
strat_samp %>%
group_by(cluster) %>%
select(sum_click) %>%
summarise("mean")
strat_samp %>%
group_by(cluster) %>%
select(sum_click) %>%
summarise_all("mean")
strat_samp %>%
group_by(cluster) %>%
select(sum_click) %>%
summarise_all("mean") %>%
ungroup() %>%
summarise(n = n())
strat_samp %>%
group_by(cluster) %>%
select(sum_click) %>%
summarise_all("mean") %>%
summarise(n = n())
strat_samp %>%
group_by(cluster) %>%
summarise(sum_clicks = mean(sum_click),
Number_of_students = n())
view(strat_samp)
View(strat_samp)
view(format(strat_samp, scientific = FALSE))
# Plot our results.
plot(gmm_model, what = "classification", main = "Mclust Classification")
gmm_model$z
gmm_model$df
gmm_model$parameters$mean
view(gmm_model$z)
gmm_model$parameters$mean
gmm_model$parameters$pro
length(gmm_model$z)
gmm_model$z
format(gmm_model$z, scientific = FALSE)
round(format(gmm_model$z, scientific = FALSE), 5)
format(round(gmm_model$z, 5), scientific = FALSE))
format(round(gmm_model$z, 5), scientific = FALSE)
View(svle_df)
svle_df %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click),
avg_sum_click = mean(sum_click))
favstats(svle_df$date)
student_clicks <- svle_df %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
favstats(student_clicks$sum_clicks)
view(student_clicks$sum_clicks)
view(student_clicks)
View(student_clicks)
student_clicks_gmm <- select(student_clicks, sum_clicks)
student_clicks_gmm
gmm_model2 <- Mclust(student_clicks_gmm, G=8)
gmm_model2 <- Mclust(student_clicks_gmm, G=8)
summary(gmm_model2)
svle_df %>%
group_by(id_site) %>%
summarise(n = n())
gmm_model2$parameters$mean
hist(student_clicks$sum_clicks)
hist(student_clicks$sum_clicks, breaks = 10)
hist(student_clicks$sum_clicks, breaks = 20)
hist(student_clicks$sum_clicks, breaks = 30)
hist(student_clicks$sum_clicks, breaks = 40)
hist(student_clicks$sum_clicks, breaks = 50)
favstats(svle_df$date)
svle_df %>%
filter(date >=86 & date <= 156)
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=86 & date <= 156) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=1 & date <= 10) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= 269) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= -10) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= -10) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= -24) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= -25) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= -1) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= 0) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
svle_df %>%
filter(date >=-25 & date <= -18) %>%
group_by(id_student) %>%
summarise(sum_clicks = sum(sum_click))
student_clicks
student_clicks$cluster <- gmm_model2$classification
student_clicks$uncertainty <- gmm_model2$uncertainty
# Exclude scientific outputs
view(format(strat_samp, scientific = FALSE))
# Exclude scientific outputs
view(format(student_clicks, scientific = FALSE))
student_clicks
options(scipen=999)
View(student_clicks)
gmm_model2$parameters$mean
# Obtain used cluster averages and number of observations in each cluster.
student_clicks %>%
group_by(cluster) %>%
summarise(sum_clicks = mean(sum_click),
Number_of_students = n())
# Obtain used cluster averages and number of observations in each cluster.
student_clicks %>%
group_by(cluster) %>%
summarise(sum_clicks = mean(sum_clicks),
Number_of_students = n())
summary(gmm_model2)
as.dataframe(gmm_model2$parameters$mean)
as.data.frame(gmm_model2$parameters$mean)
as.data.frame() %>%
mutate(cluster_mean = gmm_model2$parameters$mean)
```{r}
as.data.frame(gmm_model2$parameters$mean)
cluster_mean_df <- as.data.frame(gmm_model2$parameters$mean)
colnames(cluster_mean_df)
cluster_mean_df <- as.data.frame(gmm_model2$parameters$mean)
colnames(cluster_mean_df) <- "cluster_mean"
cluster_mean_df
# Rename rownames to date in R
cluster_mean_df <- cbind(cluster = rownames(cluster_mean_df), cluster_mean_df)
# Remove rownames
rownames(cluster_mean_df) <- NULL
cluster_mean_df
gmm_model2$d
# Obtain used cluster averages and number of observations in each cluster.
student_clicks %>%
group_by(cluster) %>%
summarise(Number_of_students = n())
